{
  "$schema": "https://biomejs.dev/schemas/2.1.3/schema.json",
  "vcs": {"enabled": false, "clientKind": "git", "useIgnoreFile": true},
  "files": {
    "ignoreUnknown": true,
    "includes": [
      "**/*.{js,mjs,cjs,ts,tsx,jsx,json,jsonc,css,html,md}",
      // Explicitly exclude undesired dirs by not listing them
      "!**/.nx/**",
      "!**/build/**",
      "!**/dist/**",
      "!**/dev/**",
      "!**/scripts/toolbox/**",
      "!**/scripts/codeshift/**",
      "!**/packages/client/__generated__/**",
      // biome parser does not yet support selectors level 4 e.g. --color-*: initial;
      "!**/packages/client/styles/theme/global.css",
      "!**/packages/server/types/**",
      "!**/packages/server/graphql/**/resolverTypes.ts",
      "!**/packages/server/graphql/**/resolverTypes.ts",
      "!**/packages/server/postgres/queries/generated/**",
      "!**/queryMap.json"
    ]
  },
  "formatter": {
    "enabled": true,
    "formatWithErrors": true,
    "indentStyle": "space",
    "indentWidth": 2,
    "lineEnding": "lf",
    "lineWidth": 100,
    "attributePosition": "auto",
    "bracketSameLine": false,
    "bracketSpacing": false,
    "expand": "auto",
    "useEditorconfig": true
  },
  "linter": {
    "enabled": true,
    "rules": {
      "recommended": false,
      "nursery": {
        "useSortedClasses": {
          "level": "error",
          // technically this is NOT safe! but safe means it will run on save
          "fix": "safe",
          "options": {
            "attributes": ["classList"],
            "functions": ["cn", "clsx", "cva", "tw", "tw.*"]
          }
        }
      },
      "complexity": {
        "noAdjacentSpacesInRegex": "error",
        "noExtraBooleanCast": "error",
        "noUselessCatch": "error",
        "noUselessEscapeInRegex": "error",
        "noUselessTypeConstraint": "error"
      },
      "correctness": {
        "noUnusedImports": {
          "level": "error",
          "fix": "safe",
          "options": {}
        },
        "useExhaustiveDependencies": "off",
        "noConstAssign": "error",
        "noConstantCondition": "error",
        "noEmptyCharacterClassInRegex": "error",
        "noEmptyPattern": "off",
        "noGlobalObjectCalls": "error",
        "noInvalidBuiltinInstantiation": "error",
        "noInvalidConstructorSuper": "error",
        "noInvalidUseBeforeDeclaration": "off",
        "noNonoctalDecimalEscape": "error",
        "noPrecisionLoss": "error",
        "noSelfAssign": "error",
        "noSetterReturn": "error",
        "noSwitchDeclarations": "error",
        "noUndeclaredVariables": "error",
        "noUnreachable": "error",
        "noUnreachableSuper": "error",
        "noUnsafeFinally": "error",
        "noUnsafeOptionalChaining": "error",
        "noUnusedLabels": "error",
        "noUnusedPrivateClassMembers": "error",
        "noUnusedVariables": {
          "level": "error",
          "options": {
            "ignoreRestSiblings": true
          }
        },
        "useIsNan": "error",
        "useValidForDirection": "error",
        "useValidTypeof": "error",
        "useYield": "error",
        "noUnusedFunctionParameters": {
          "level": "error",
          "options": {
            "ignoreRestSiblings": true
          }
        },
        // typescript checks this more accurate, e.g. spread objects with a key prop in it
        "useJsxKeyInIterable": "off"
      },
      "style": {
        "noCommonJs": "error",
        "noNamespace": "off",
        "noNonNullAssertion": "off",
        "useArrayLiterals": "error",
        "useAsConstAssertion": "error",
        "useConsistentMemberAccessibility": "off"
      },
      "suspicious": {
        "noAsyncPromiseExecutor": "error",
        "noCatchAssign": "error",
        "noClassAssign": "error",
        "noCompareNegZero": "error",
        "noControlCharactersInRegex": "error",
        "noDebugger": "error",
        "noDoubleEquals": "error",
        "noDuplicateCase": "error",
        "noDuplicateClassMembers": "error",
        "noDuplicateElseIf": "error",
        "noDuplicateObjectKeys": "error",
        "noDuplicateParameters": "error",
        "noEmptyBlockStatements": "off",
        "noExplicitAny": "off",
        "noExtraNonNullAssertion": "error",
        "noFallthroughSwitchClause": "error",
        "noFunctionAssign": "error",
        "noGlobalAssign": "error",
        "noImportAssign": "error",
        "noIrregularWhitespace": "error",
        "noMisleadingCharacterClass": "error",
        "noMisleadingInstantiator": "error",
        "noPrototypeBuiltins": "error",
        "noRedeclare": "error",
        "noShadowRestrictedNames": "off",
        "noSparseArray": "error",
        "noUnsafeDeclarationMerging": "error",
        "noUnsafeNegation": "error",
        "noWith": "error",
        "useAwait": "off",
        "useGetterReturn": "error",
        "useNamespaceKeyword": "error"
      }
    },
    "includes": ["**/*.ts", "**/*.tsx", "**/*.mts", "**/*.cts"]
  },
  "javascript": {
    "formatter": {
      "jsxQuoteStyle": "single",
      "quoteProperties": "asNeeded",
      "trailingCommas": "none",
      "semicolons": "asNeeded",
      "arrowParentheses": "always",
      "bracketSameLine": false,
      "quoteStyle": "single",
      "attributePosition": "auto",
      "bracketSpacing": false
    },
    "globals": [
      "__PRODUCTION__",
      "__APP_VERSION__",
      "__SOCKET_PORT__",
      "__HOCUS_POCUS_PORT__",
      "__webpack_public_path__",
      "__COMMIT_HASH__"
    ]
  },
  "html": {"formatter": {"selfCloseVoidElements": "always"}},
  "overrides": [
    {
      "includes": ["packages/client/**"],
      "linter": {
        "domains": {
          "react": "recommended"
        }
      }
    },
    {
      "includes": ["**/packages/server/postgres/migrations/**"],
      "linter": {
        "rules": {
          "correctness": {
            "noUnusedFunctionParameters": "off"
          }
        }
      }
    },
    {
      "includes": ["scripts/**", "packages/server/**"],
      "linter": {
        "rules": {
          "style": {
            "noCommonJs": "off"
          }
        }
      }
    },
    {
      "includes": ["**/__tests__/**"],
      "linter": {
        "domains": {
          "test": "all"
        }
      },
      "javascript": {
        "globals": ["jest"]
      }
    }
  ],
  "assist": {
    "enabled": true,
    "actions": {"source": {"organizeImports": "on"}}
  }
}
