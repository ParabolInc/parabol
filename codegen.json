{
  "config": {
    "content": "// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-nocheck",
    "defaultScalarType": "string",
    "enumsAsTypes": true,
    "optionalResolveType": true,
    "scalars": {"DateTime": "Date", "File": "TFile", "RRule": "RRule"}
  },
  "generates": {
    "packages/server/graphql/private/resolverTypes.ts": {
      "config": {
        "contextType": "../graphql#InternalContext",
        "mappers": {
          "ChangeEmailDomainSuccess": "./types/ChangeEmailDomainSuccess#ChangeEmailDomainSuccessSource",
          "Company": "./queries/company#CompanySource",
          "DraftEnterpriseInvoicePayload": "./types/DraftEnterpriseInvoicePayload#DraftEnterpriseInvoicePayloadSource",
          "EndTrialSuccess": "./types/EndTrialSuccess#EndTrialSuccessSource",
          "File": "../public/types/File#TFile",
          "FlagConversionModalPayload": "./types/FlagConversionModalPayload#FlagConversionModalPayloadSource",
          "FlagOverLimitPayload": "./types/FlagOverLimitPayload#FlagOverLimitPayloadSource",
          "GenerateMeetingSummarySuccess": "./types/GenerateMeetingSummarySuccess#GenerateMeetingSummarySuccessSource",
          "LoginsPayload": "./types/LoginsPayload#LoginsPayloadSource",
          "MeetingTemplate": "../../database/types/MeetingTemplate#default as IMeetingTemplate",
          "NewMeeting": "../../postgres/types/Meeting#AnyMeeting",
          "Organization": "../../postgres/types/index#Organization as OrganizationDB",
          "PingableServices": "./types/PingableServices#PingableServicesSource",
          "ProcessRecurrenceSuccess": "./types/ProcessRecurrenceSuccess#ProcessRecurrenceSuccessSource",
          "RemoveAuthIdentitySuccess": "./types/RemoveAuthIdentitySuccess#RemoveAuthIdentitySuccessSource",
          "RetrospectiveMeeting": "../../database/types/MeetingRetrospective#default",
          "SAML": "./types/SAML#SAMLSource",
          "SetIsFreeMeetingTemplateSuccess": "./types/SetIsFreeMeetingTemplateSuccess#SetIsFreeMeetingTemplateSuccessSource",
          "SignupsPayload": "./types/SignupsPayload#SignupsPayloadSource",
          "StartTrialSuccess": "./types/StartTrialSuccess#StartTrialSuccessSource",
          "StripeFailPaymentPayload": "./mutations/stripeFailPayment#StripeFailPaymentPayloadSource",
          "Team": "../../postgres/types/index#Team as TeamDB",
          "UpdateOrgFeatureFlagSuccess": "./types/UpdateOrgFeatureFlagSuccess#UpdateOrgFeatureFlagSuccessSource",
          "UpgradeToTeamTierSuccess": "./mutations/upgradeToTeamTier#UpgradeToTeamTierSuccessSource",
          "User": "../../postgres/types/IUser#default as IUser",
          "VerifyDomainSuccess": "./types/VerifyDomainSuccess#VerifyDomainSuccessSource"
        }
      },
      "plugins": ["typescript", "typescript-resolvers", "add"],
      "schema": "packages/server/graphql/private/schema.graphql"
    },
    "packages/server/graphql/public/resolverTypes.ts": {
      "config": {
        "contextType": "../graphql#GQLContext",
        "mappers": {
          "SetSlackNotificationPayload": "./types/SetSlackNotificationPayload#SetSlackNotificationPayloadSource",
          "SetDefaultSlackChannelSuccess": "./types/SetDefaultSlackChannelSuccess#SetDefaultSlackChannelSuccessSource",
          "AddCommentSuccess": "./types/AddCommentSuccess#AddCommentSuccessSource",
          "AddIntegrationProviderSuccess": "./types/AddIntegrationProviderSuccess#AddIntegrationProviderSuccessSource",
          "DeleteCommentSuccess": "./types/DeleteCommentSuccess#DeleteCommentSuccessSource",
          "UpdateCommentContentSuccess": "./types/UpdateCommentContentSuccess#UpdateCommentContentSuccessSource",
          "AddSlackAuthPayload": "./types/AddSlackAuthPayload#AddSlackAuthPayloadSource",
          "RemoveAgendaItemPayload": "./types/RemoveAgendaItemPayload#RemoveAgendaItemPayloadSource",
          "AddAgendaItemPayload": "./types/AddAgendaItemPayload#AddAgendaItemPayloadSource",
          "UpdateAgendaItemPayload": "./types/UpdateAgendaItemPayload#UpdateAgendaItemPayloadSource",
          "TeamMeetingSettings": "../../postgres/types/index#MeetingSettings as TeamMeetingSettingsDB",
          "TeamPromptMeetingSettings": "../../postgres/types/index#MeetingSettings as TeamMeetingSettingsDB",
          "PokerMeetingSettings": "../../postgres/types/index#PokerMeetingSettings as PokerMeetingSettingsDB",
          "RetrospectiveMeetingSettings": "../../postgres/types/index#RetrospectiveMeetingSettings as RetrospectiveMeetingSettingsDB",
          "RemovePokerTemplatePayload": "./types/RemovePokerTemplatePayload#RemovePokerTemplatePayloadSource",
          "JiraRemoteAvatarUrls": "./types/JiraRemoteAvatarUrls#JiraRemoteAvatarUrlsSource",
          "TemplateDimensionRef": "./types/TemplateDimensionRef#TemplateDimensionRefSource",
          "UpdateIntegrationProviderSuccess": "./types/UpdateIntegrationProviderSuccess#UpdateIntegrationProviderSuccessSource",
          "EndTeamPromptSuccess": "./types/EndTeamPromptSuccess#EndTeamPromptSuccessSource",
          "AcceptRequestToJoinDomainSuccess": "./types/AcceptRequestToJoinDomainSuccess#AcceptRequestToJoinDomainSuccessSource",
          "AcceptTeamInvitationPayload": "./types/AcceptTeamInvitationPayload#AcceptTeamInvitationPayloadSource",
          "ActionMeeting": "../../database/types/MeetingAction#default",
          "ActionMeetingMember": "../../database/types/ActionMeetingMember#default as ActionMeetingMemberDB",
          "AddApprovedOrganizationDomainsSuccess": "./types/AddApprovedOrganizationDomainsSuccess#AddApprovedOrganizationDomainsSuccessSource",
          "AddPokerTemplateSuccess": "./types/AddPokerTemplateSuccess#AddPokerTemplateSuccessSource",
          "AddReactjiToReactableSuccess": "./types/AddReactjiToReactableSuccess#AddReactjiToReactableSuccessSource",
          "AddReflectTemplateSuccess": "./types/AddReflectTemplateSuccess#AddReflectTemplateSuccessSource",
          "AddTeamMemberIntegrationAuthSuccess": "./types/AddTeamMemberIntegrationAuthPayload#AddTeamMemberIntegrationAuthSuccessSource",
          "AddTranscriptionBotSuccess": "./types/AddTranscriptionBotSuccess#AddTranscriptionBotSuccessSource",
          "AddedNotification": "./types/AddedNotification#AddedNotificationSource",
          "AgendaItem": "../../postgres/types/index#AgendaItem as AgendaItemDB",
          "ArchiveTeamPayload": "./types/ArchiveTeamPayload#ArchiveTeamPayloadSource",
          "AtlassianIntegration": "../../postgres/queries/getAtlassianAuthByUserIdTeamId#AtlassianAuth as AtlassianAuthDB",
          "AuthTokenPayload": "./types/AuthTokenPayload#AuthTokenPayloadSource",
          "AutogroupSuccess": "./types/AutogroupSuccess#AutogroupSuccessSource",
          "AzureDevOpsIntegration": ".types/AzureDevOpsIntegration#AzureDevOpsIntegrationSource",
          "AzureDevOpsRemoteProject": "./types/AzureDevOpsRemoteProject#AzureDevOpsRemoteProjectSource",
          "AzureDevOpsWorkItem": "../../dataloader/azureDevOpsLoaders#AzureDevOpsWorkItem",
          "BatchArchiveTasksSuccess": "./types/BatchArchiveTasksSuccess#BatchArchiveTasksSuccessSource",
          "Comment": "../../postgres/types/index#Comment as CommentDB",
          "Company": "./types/Company#CompanySource",
          "CreateGcalEventInput": "./types/CreateGcalEventInput#default",
          "CreateImposterTokenPayload": "./types/CreateImposterTokenPayload#CreateImposterTokenPayloadSource",
          "CreateStripeSubscriptionSuccess": "./types/CreateStripeSubscriptionSuccess#CreateStripeSubscriptionSuccessSource",
          "CreateTaskPayload": "./types/CreateTaskPayload#CreateTaskPayloadSource",
          "Discussion": "../../postgres/queries/generated/getDiscussionsByIdsQuery#IGetDiscussionsByIdsQueryResult",
          "DomainJoinRequest": "../../database/types/DomainJoinRequest#default as DomainJoinRequestDB",
          "File": "./types/File#TFile",
          "GcalIntegration": "./types/GcalIntegration#GcalIntegrationSource",
          "GenerateGroupsSuccess": "./types/GenerateGroupsSuccess#GenerateGroupsSuccessSource",
          "GenerateInsightSuccess": "./types/GenerateInsightSuccess#GenerateInsightSuccessSource",
          "GetTemplateSuggestionSuccess": "./types/GetTemplateSuggestionSuccess#GetTemplateSuggestionSuccessSource",
          "GitHubIntegration": "../../postgres/queries/getGitHubAuthByUserIdTeamId#GitHubAuth",
          "GitLabIntegration": "./types/GitLabIntegration#GitLabIntegrationSource",
          "IntegrationProviderOAuth1": "../../postgres/queries/getIntegrationProvidersByIds#TIntegrationProvider",
          "IntegrationProviderOAuth2": "../../postgres/queries/getIntegrationProvidersByIds#TIntegrationProvider",
          "IntegrationProviderWebhook": "../../postgres/queries/getIntegrationProvidersByIds#TIntegrationProvider",
          "InviteToTeamPayload": "./types/InviteToTeamPayload#InviteToTeamPayloadSource",
          "JiraIssue": "./types/JiraIssue#JiraIssueSource",
          "JiraRemoteProject": "./types/JiraRemoteProject#JiraRemoteProjectSource",
          "JiraSearchQuery": "../../database/types/JiraSearchQuery#default as JiraSearchQueryDB",
          "JiraServerIntegration": "./types/JiraServerIntegration#JiraServerIntegrationSource",
          "JiraServerIssue": "./types/JiraServerIssue#JiraServerIssueSource",
          "JiraServerRemoteProject": "../../dataloader/jiraServerLoaders#JiraServerProject",
          "MSTeamsIntegration": "./types/MSTeamsIntegration#MSTeamsIntegrationSource",
          "MattermostIntegration": "./types/MattermostIntegration#MattermostIntegrationSource",
          "MeetingSeries": "../../postgres/types/MeetingSeries#MeetingSeries",
          "MeetingTemplate": "../../database/types/MeetingTemplate#default",
          "NewMeeting": "../../postgres/types/Meeting#AnyMeeting",
          "NewMeetingStage": "./types/NewMeetingStage#NewMeetingStageSource",
          "NewMeetingPhase": "./types/NewMeetingPhase#NewMeetingPhaseSource",
          "NotificationMeetingStageTimeLimitEnd": "../../database/types/NotificationMeetingStageTimeLimitEnd#default as NotificationMeetingStageTimeLimitEndDB",
          "NotificationTeamInvitation": "../../database/types/NotificationTeamInvitation#default as NotificationTeamInvitationDB",
          "NotifyDiscussionMentioned": "../../database/types/NotificationDiscussionMentioned#default as NotificationDiscussionMentionedDB",
          "NotifyKickedOut": "../../database/types/NotificationKickedOut#default",
          "NotifyMentioned": "../../database/types/NotificationMentioned#default as NotificationMentionedDB",
          "NotifyPaymentRejected": "../../database/types/NotificationPaymentRejected#default",
          "NotifyPromoteToOrgLeader": "../../database/types/NotificationPromoteToBillingLeader#default",
          "NotifyRequestToJoinOrg": "../../database/types/NotificationRequestToJoinOrg#default",
          "NotifyResponseMentioned": "../../database/types/NotificationResponseMentioned#default as NotificationResponseMentionedDB",
          "NotifyResponseReplied": "../../database/types/NotifyResponseReplied#default as NotifyResponseRepliedDB",
          "NotifyTaskInvolves": "../../database/types/NotificationTaskInvolves#default",
          "NotifyTeamArchived": "../../database/types/NotificationTeamArchived#default",
          "Organization": "../../postgres/types/index#Organization as OrganizationDB",
          "TemplateScaleValue": "./types/TemplateScaleValue#TemplateScaleValueSource as TemplateScaleValueSourceDB",
          "SuggestedAction": "../../postgres/types/index#SuggestedAction as SuggestedActionDB",
          "TemplateScale": "../../postgres/types/index#TemplateScale as TemplateScaleDB",
          "TemplateScaleRef": "../../postgres/types/index#TemplateScaleRef as TemplateScaleRefDB",
          "Threadable": "./types/Threadable#ThreadableSource",
          "OrgIntegrationProviders": "./types/OrgIntegrationProviders#OrgIntegrationProvidersSource",
          "OrganizationUser": "../../postgres/types/index#OrganizationUser as OrganizationUserDB",
          "PokerMeeting": "../../database/types/MeetingPoker#default as MeetingPoker",
          "PokerMeetingMember": "../../database/types/MeetingPokerMeetingMember#default as PokerMeetingMemberDB",
          "PokerTemplate": "../../database/types/PokerTemplate#default as PokerTemplateDB",
          "RRule": "rrule#RRule",
          "Reactable": "../../database/types/Reactable#Reactable",
          "Reactji": "../types/Reactji#ReactjiSource",
          "ReflectPrompt": "../../database/types/RetrospectivePrompt#default",
          "ReflectTemplate": "../../database/types/ReflectTemplate#default",
          "RemoveApprovedOrganizationDomainsSuccess": "./types/RemoveApprovedOrganizationDomainsSuccess#RemoveApprovedOrganizationDomainsSuccessSource",
          "RemoveIntegrationSearchQuerySuccess": "./types/RemoveIntegrationSearchQuerySuccess#RemoveIntegrationSearchQuerySuccessSource",
          "RemoveTeamMemberIntegrationAuthSuccess": "./types/RemoveTeamMemberIntegrationAuthPayload#RemoveTeamMemberIntegrationAuthSuccessSource",
          "RemoveTeamMemberPayload": "./types/RemoveTeamMemberPayload#RemoveTeamMemberPayloadSource",
          "RequestToJoinDomainSuccess": "./types/RequestToJoinDomainSuccess#RequestToJoinDomainSuccessSource",
          "ResetReflectionGroupsSuccess": "./types/ResetReflectionGroupsSuccess#ResetReflectionGroupsSuccessSource",
          "RetroReflection": "../../postgres/types/index#RetroReflection as RetroReflectionDB",
          "RetroReflectionGroup": "./types/RetroReflectionGroup#RetroReflectionGroupSource",
          "RetrospectiveMeeting": "../../database/types/MeetingRetrospective#default",
          "RetrospectiveMeetingMember": "../../database/types/RetroMeetingMember#default",
          "SAML": "./types/SAML#SAMLSource",
          "SetMeetingSettingsPayload": "../types/SetMeetingSettingsPayload#SetMeetingSettingsPayloadSource",
          "SetNotificationStatusPayload": "./types/SetNotificationStatusPayload#SetNotificationStatusPayloadSource",
          "SetOrgUserRoleSuccess": "./types/SetOrgUserRoleSuccess#SetOrgUserRoleSuccessSource",
          "ShareTopicSuccess": "./types/ShareTopicSuccess#ShareTopicSuccessSource",
          "SlackIntegration": "../../postgres/types/index#SlackAuth as SlackAuthDB",
          "SlackNotification": "../../postgres/types/index#SlackNotification as SlackNotificationDB",
          "StartCheckInSuccess": "./types/StartCheckInSuccess#StartCheckInSuccessSource",
          "StartRetrospectiveSuccess": "./types/StartRetrospectiveSuccess#StartRetrospectiveSuccessSource",
          "StartTeamPromptSuccess": "./types/StartTeamPromptSuccess#StartTeamPromptSuccessSource",
          "StripeFailPaymentPayload": "./types/StripeFailPaymentPayload#StripeFailPaymentPayloadSource",
          "Task": "../../database/types/Task#default",
          "Team": "../../postgres/types/index#Team as TeamDB",
          "TeamHealthPhase": "./types/TeamHealthPhase#TeamHealthPhaseSource",
          "TeamHealthStage": "./types/TeamHealthStage#TeamHealthStageSource",
          "TeamInvitation": "../../database/types/TeamInvitation#default",
          "TeamMember": "../../postgres/types/index#TeamMember as TeamMember",
          "TeamMemberIntegrationAuthWebhook": "../../postgres/queries/getTeamMemberIntegrationAuth#TeamMemberIntegrationAuth",
          "TeamMemberIntegrationAuthOAuth1": "../../postgres/queries/getTeamMemberIntegrationAuth#TeamMemberIntegrationAuth",
          "TeamMemberIntegrationAuthOAuth2": "../../postgres/queries/getTeamMemberIntegrationAuth#TeamMemberIntegrationAuth",
          "TeamMemberIntegrations": "./types/TeamMemberIntegrations#TeamMemberIntegrationsSource",
          "TeamPromptMeeting": "../../database/types/MeetingTeamPrompt#default as MeetingTeamPromptDB",
          "TeamPromptMeetingMember": "../../database/types/TeamPromptMeetingMember#default as TeamPromptMeetingMemberDB",
          "TeamPromptResponse": "../../postgres/types/index#TeamPromptResponse as TeamPromptResponseDB",
          "TemplateDimension": "../../postgres/types/index#TemplateDimension as TemplateDimensionDB",
          "TimelineEventTeamPromptComplete": "./types/TimelineEventTeamPromptComplete#TimelineEventTeamPromptCompleteSource",
          "ToggleFavoriteTemplateSuccess": "./types/ToggleFavoriteTemplateSuccess#ToggleFavoriteTemplateSuccessSource",
          "ToggleSummaryEmailSuccess": "./types/ToggleSummaryEmailSuccess#ToggleSummaryEmailSuccessSource",
          "TopRetroTemplate": "./types/TopRetroTemplate#TopRetroTemplateSource",
          "UpdateAutoJoinSuccess": "./types/UpdateAutoJoinSuccess#UpdateAutoJoinSuccessSource",
          "UpdateCreditCardSuccess": "./types/UpdateCreditCardSuccess#UpdateCreditCardSuccessSource",
          "UpdateDimensionFieldSuccess": "./types/UpdateDimensionFieldSuccess#UpdateDimensionFieldSuccessSource",
          "UpdateFeatureFlagPayload": "./types/UpdateFeatureFlagPayload#UpdateFeatureFlagPayloadSource",
          "UpdateGitLabDimensionFieldSuccess": "./types/UpdateGitLabDimensionFieldSuccess#UpdateGitLabDimensionFieldSuccessSource",
          "UpdateMeetingPromptSuccess": "./types/UpdateMeetingPromptSuccess#UpdateMeetingPromptSuccessSource",
          "UpdateMeetingTemplateSuccess": "./types/UpdateMeetingTemplateSuccess#UpdateMeetingTemplateSuccessSource",
          "UpdateOrgPayload": "./types/UpdateOrgPayload#UpdateOrgPayloadSource",
          "UpdateRecurrenceSettingsSuccess": "./types/UpdateRecurrenceSettingsSuccess#UpdateRecurrenceSettingsSuccessSource",
          "UpdateTaskPayload": "./types/UpdateTaskPayload#UpdateTaskPayloadSource",
          "UpdateTemplateCategorySuccess": "./types/UpdateTemplateCategorySuccess#UpdateTemplateCategorySuccessSource",
          "UpdateUserProfilePayload": "./types/UpdateUserProfilePayload#UpdateUserProfilePayloadSource",
          "UpdatedNotification": "./types/AddedNotification#UpdatedNotificationSource",
          "UpgradeToTeamTierSuccess": "./types/UpgradeToTeamTierSuccess#UpgradeToTeamTierSuccessSource",
          "UpsertTeamPromptResponseSuccess": "./types/UpsertTeamPromptResponseSuccess#UpsertTeamPromptResponseSuccessSource",
          "User": "../../postgres/types/IUser#default as IUser",
          "UserLogInPayload": "./types/UserLogInPayload#UserLogInPayloadSource",
          "_xGitLabProject": "./types/_xGitLabProject#_xGitLabProjectSource as _xGitLabProject"
        },
        "showUnusedMappers": false
      },
      "plugins": ["typescript", "typescript-resolvers", "add"],
      "schema": "packages/server/graphql/public/schema.graphql"
    },
    "packages/server/types/githubTypes.ts": {
      "config": {"assumeValidSDL": true},
      "documents": "packages/server/utils/githubQueries/*.graphql",
      "plugins": ["typescript", "typescript-operations", "add"],
      "schema": "packages/server/utils/githubSchema.graphql"
    },
    "packages/server/types/gitlabTypes.ts": {
      "config": {"assumeValidSDL": true},
      "documents": [
        "packages/server/graphql/nestedSchema/GitLab/queries/*.graphql",
        "packages/server/graphql/nestedSchema/GitLab/mutations/*.graphql"
      ],
      "plugins": ["typescript", "typescript-operations", "add"],
      "schema": "packages/server/graphql/nestedSchema/GitLab/gitlabSchema.graphql"
    }
  }
}
