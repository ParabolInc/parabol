{
  "config": {
    "content": "// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-nocheck",
    "defaultScalarType": "string",
    "enumsAsTypes": true,
    "scalars": {"DateTime": "Date", "RRule": "RRule"}
  },
  "generates": {
    "packages/server/graphql/private/resolverTypes.ts": {
      "config": {
        "contextType": "../graphql#InternalContext",
        "mappers": {
          "AddFeatureFlagToOrgSuccess": "./types/AddFeatureFlagToOrgSuccess#AddFeatureFlagToOrgSuccessSource",
          "ChangeEmailDomainSuccess": "./types/ChangeEmailDomainSuccess#ChangeEmailDomainSuccessSource",
          "Company": "./queries/company#CompanySource",
          "DraftEnterpriseInvoicePayload": "./types/DraftEnterpriseInvoicePayload#DraftEnterpriseInvoicePayloadSource",
          "FlagConversionModalPayload": "./types/FlagConversionModalPayload#FlagConversionModalPayloadSource",
          "FlagOverLimitPayload": "./types/FlagOverLimitPayload#FlagOverLimitPayloadSource",
          "LoginsPayload": "./types/LoginsPayload#LoginsPayloadSource",
          "MeetingTemplate": "../../database/types/MeetingTemplate#default as IMeetingTemplate",
          "Organization": "../../database/types/Organization#default as Organization",
          "PingableServices": "./types/PingableServices#PingableServicesSource",
          "ProcessRecurrenceSuccess": "./types/ProcessRecurrenceSuccess#ProcessRecurrenceSuccessSource",
          "RemoveAuthIdentitySuccess": "./types/RemoveAuthIdentitySuccess#RemoveAuthIdentitySuccessSource",
          "SetIsFreeMeetingTemplateSuccess": "./types/SetIsFreeMeetingTemplateSuccess#SetIsFreeMeetingTemplateSuccessSource",
          "SignupsPayload": "./types/SignupsPayload#SignupsPayloadSource",
          "StripeFailPaymentPayload": "./mutations/stripeFailPayment#StripeFailPaymentPayloadSource",
          "User": "../../postgres/types/IUser#default as IUser"
        }
      },
      "plugins": ["typescript", "typescript-resolvers", "add"],
      "schema": "packages/server/graphql/private/schema.graphql"
    },
    "packages/server/graphql/public/resolverTypes.ts": {
      "config": {
        "contextType": "../graphql#GQLContext",
        "mappers": {
          "RRule": "rrule#RRule",
          "AddApprovedOrganizationDomainsSuccess": "./types/AddApprovedOrganizationDomainsSuccess#AddApprovedOrganizationDomainsSuccessSource",
          "UpdateFeatureFlagPayload": "./types/UpdateFeatureFlagPayload#UpdateFeatureFlagPayloadSource",
          "AddedNotification": "./types/AddedNotification#AddedNotificationSource",
          "Comment": "../../database/types/Comment#default as CommentDB",
          "Company": "./types/Company#CompanySource",
          "CreateImposterTokenPayload": "./types/CreateImposterTokenPayload#CreateImposterTokenPayloadSource",
          "Discussion": "../../postgres/queries/generated/getDiscussionsByIdsQuery#IGetDiscussionsByIdsQueryResult",
          "JiraRemoteProject": "../types/JiraRemoteProject#JiraRemoteProjectSource",
          "LoginWithGooglePayload": "./types/LoginWithGooglePayload#LoginWithGooglePayloadSource",
          "MeetingSeries": "../../postgres/types/MeetingSeries#MeetingSeries",
          "NewMeeting": "../../postgres/types/Meeting#AnyMeeting",
          "NotificationMeetingStageTimeLimitEnd": "../../database/types/NotificationMeetingStageTimeLimitEnd#default as NotificationMeetingStageTimeLimitEndDB",
          "NotificationTeamInvitation": "../../database/types/NotificationTeamInvitation#default as NotificationTeamInvitationDB",
          "NotifyDiscussionMentioned": "../../database/types/NotificationDiscussionMentioned#default as NotificationDiscussionMentionedDB",
          "NotifyKickedOut": "../../database/types/NotificationKickedOut#default",
          "NotifyPaymentRejected": "../../database/types/NotificationPaymentRejected#default",
          "NotifyPromoteToOrgLeader": "../../database/types/NotificationPromoteToBillingLeader#default",
          "NotifyResponseMentioned": "../../database/types/NotificationResponseMentioned#default as NotificationResponseMentionedDB",
          "NotifyResponseReplied": "../../database/types/NotifyResponseReplied#default as NotifyResponseRepliedDB",
          "NotifyTaskInvolves": "../../database/types/NotificationTaskInvolves#default",
          "NotifyTeamArchived": "../../database/types/NotificationTeamArchived#default",
          "Organization": "../../database/types/Organization#default as Organization",
          "PokerMeeting": "../../database/types/MeetingPoker#default as MeetingPoker",
          "RemoveApprovedOrganizationDomainsSuccess": "./types/RemoveApprovedOrganizationDomainsSuccess#RemoveApprovedOrganizationDomainsSuccessSource",
          "RemoveIntegrationSearchQuerySuccess": "./types/RemoveIntegrationSearchQuerySuccess#RemoveIntegrationSearchQuerySuccessSource",
          "Team": "../../postgres/queries/getTeamsByIds#Team",
          "TeamPromptMeeting": "../../database/types/MeetingTeamPrompt#default as MeetingTeamPromptDB",
          "TeamPromptResponse": "../../postgres/queries/getTeamPromptResponsesByIds#TeamPromptResponse",
          "TimelineEventTeamPromptComplete": "./types/TimelineEventTeamPromptComplete#TimelineEventTeamPromptCompleteSource",
          "ToggleSummaryEmailSuccess": "./types/ToggleSummaryEmailSuccess#ToggleSummaryEmailSuccessSource",
          "UpdateDimensionFieldSuccess": "./types/UpdateDimensionFieldSuccess#UpdateDimensionFieldSuccessSource",
          "UpdateGitLabDimensionFieldSuccess": "./types/UpdateGitLabDimensionFieldSuccess#UpdateGitLabDimensionFieldSuccessSource",
          "UpdateMeetingPromptSuccess": "./types/UpdateMeetingPromptSuccess#UpdateMeetingPromptSuccessSource",
          "UpdateRecurrenceSettingsSuccess": "./types/UpdateRecurrenceSettingsSuccess#UpdateRecurrenceSettingsSuccessSource",
          "StartTeamPromptSuccess": "./types/StartTeamPromptSuccess#StartTeamPromptSuccessSource",
          "UpsertTeamPromptResponseSuccess": "./types/UpsertTeamPromptResponseSuccess#UpsertTeamPromptResponseSuccessSource",
          "User": "../../postgres/types/IUser#default as IUser"
        }
      },
      "plugins": ["typescript", "typescript-resolvers", "add"],
      "schema": "packages/server/graphql/public/schema.graphql"
    },
    "packages/server/types/githubTypes.ts": {
      "config": {"assumeValidSDL": true},
      "documents": "packages/server/utils/githubQueries/*.graphql",
      "plugins": ["typescript", "typescript-operations", "add"],
      "schema": "packages/server/utils/githubSchema.graphql"
    },
    "packages/server/types/gitlabTypes.ts": {
      "config": {"assumeValidSDL": true},
      "documents": [
        "packages/server/graphql/nestedSchema/GitLab/queries/*.graphql",
        "packages/server/graphql/nestedSchema/GitLab/mutations/*.graphql"
      ],
      "plugins": ["typescript", "typescript-operations", "add"],
      "schema": "packages/server/graphql/nestedSchema/GitLab/gitlabSchema.graphql"
    }
  }
}
