name: Check Code Style

on: [push]

env:
  DEPENDENCIES_CACHE: cache-node-modules

jobs:
  install-deps:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "16.16.0"
          cache: "yarn"
      - name: Cache node modules
        id: cache
        uses: actions/cache@v3
        with:
          path: |
            **/node_modules
          key: ${{ env.DEPENDENCIES_CACHE }}-${{ hashFiles('yarn.lock') }}
      - name: yarn install
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile
  build:
    services:
      rethinkdb:
        image: rethinkdb:2.4.0
        ports:
          - "8080:8080"
          - "29015:29015"
          - "28015:28015"
      postgres:
        image: postgres:12
        env:
          POSTGRES_PASSWORD: "parabol"
          POSTGRES_USER: "pgparaboladmin"
          POSTGRES_DB: "parabol-saas"
          POSTGRES_HOST: "localhost"
          POSTGRES_PORT: "5432"
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    runs-on: ubuntu-latest
    needs: install-deps
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v2
      - name: Get cached node modules
        uses: actions/cache@v3
        with:
          path: |
            **/node_modules
          key: ${{ env.DEPENDENCIES_CACHE }}-${{ hashFiles('yarn.lock') }}
      - name: Build Databases
        run: |
          cp .env.example .env
          yarn db:migrate
          yarn pg:migrate up
          yarn pg:build
      - name: Build Assets
        run: yarn build
      - name: Check
        run: |
          npx nx affected --target=typecheck
          npx nx affected --target=lint:check
          npx nx affected --target=prettier:check
