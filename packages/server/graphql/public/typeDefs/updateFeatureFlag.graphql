"""
A flag to give an individual user super powers
"""
enum UserFlagEnum {
  standups
  azureDevOps
  msTeams
  insights
  recurrence
  templateLimit
  noAISummary
  noMeetingHistoryLimit
  checkoutFlow
  retrosInDisguise
}

"""
The types of flags that give an individual user super powers
"""
type UserFeatureFlags {
  standups: Boolean!
  azureDevOps: Boolean!
  msTeams: Boolean!
  insights: Boolean!
  recurrence: Boolean!
  templateLimit: Boolean!
  noAISummary: Boolean!
  noMeetingHistoryLimit: Boolean!
  checkoutFlow: Boolean!
  retrosInDisguise: Boolean!
}

extend type Mutation {
  """
  Give someone advanced features in a flag
  """
  updateFeatureFlag(
    """
    a list of the complete or partial email of the person to whom you are giving advanced features.
          Matches via a regex to support entire domains
    """
    emails: [String!]

    """
    grant access to an entire domain. the part of the email after the @
    """
    domain: String

    """
    the flag that you want to give to the user
    """
    flag: UserFlagEnum!

    """
    whether to add or remove the flag
    """
    addFlag: Boolean!
  ): UpdateFeatureFlagPayload!
}

type UpdateFeatureFlagPayload {
  error: StandardMutationError

  """
  the user that was given the super power. Use users instead in GraphiQL since it may affect multiple users
  """
  user: User

  """
  the users given the super power
  """
  users: [User]
}
