extend type Mutation {
  """
  Start a new meeting
  """
  startRetrospective(
    """
    The team starting the meeting
    """
    teamId: ID!
    """
    The recurrence settings of the meeting
    """
    recurrenceSettings: RecurrenceSettingsInput
    """
    The gcal input if creating a gcal event
    """
    gcalInput: CreateGcalEventInput
  ): StartRetrospectivePayload!
}

"""
Return object for StartRetrospectivePayload
"""
union StartRetrospectivePayload = ErrorPayload | StartRetrospectiveSuccess

type StartRetrospectiveSuccess {
  meeting: RetrospectiveMeeting!
  meetingId: ID!
  team: Team!
  hasGcalError: Boolean
}

input CreateGcalEventInput {
  """
  The title of the event
  """
  title: String!
  """
  The start timestamp of the event
  """
  startTimestamp: Int!
  """
  The end timestamp of the event
  """
  endTimestamp: Int!
  """
  The timezone of the event
  """
  timeZone: String!
  """
  The type of video call to added to the gcal event. If not provided, no video call will be added
  """
  videoType: GcalVideoTypeEnum
  """
  The emails that will be invited to the gcal event. If not provided, the no one will be invited
  """
  invitees: [Email!]
}
