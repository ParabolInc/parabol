extend type Mutation {
  """
  Start a new meeting
  """
  startRetrospective(
    """
    The team starting the meeting
    """
    teamId: ID!
    """
    Name of the meeting or series
    """
    name: String
    """
    The recurrence rule for the meeting series in RRULE format
    """
    rrule: RRule
    """
    The gcal input if creating a gcal event
    """
    gcalInput: CreateGcalEventInput
  ): StartRetrospectivePayload!
}

"""
Return object for StartRetrospectivePayload
"""
union StartRetrospectivePayload = ErrorPayload | StartRetrospectiveSuccess

type StartRetrospectiveSuccess {
  meeting: RetrospectiveMeeting!
  meetingId: ID!
  team: Team!
  hasGcalError: Boolean
}
