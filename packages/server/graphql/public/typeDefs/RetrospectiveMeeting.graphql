"""
A suggested reflection group created by OpenAI'
"""
type AutogroupReflectionGroup {
  """
  The smart title for the reflection group created by OpenAI
  """
  groupTitle: String!

  """
  The ids of the reflections in the group
  """
  reflectionIds: [ID!]!
}

"""
A block of the meeting transcription with a speaker and text
"""
type TranscriptBlock {
  """
  The speaker who said the words
  """
  speaker: String!

  """
  The words that the speaker said
  """
  words: String!
}

"""
A retrospective meeting
"""
type RetrospectiveMeeting implements NewMeeting {
  """
  The unique meeting id. shortid.
  """
  id: ID!

  """
  The suggested reflection groups created by OpenAI
  """
  autogroupReflectionGroups: [AutogroupReflectionGroup!]

  """
  The groups that existed before the autogrouping
  """
  resetReflectionGroups: [AutogroupReflectionGroup!]

  """
  The Zoom meeting URL for the meeting
  """
  videoMeetingURL: String

  """
  The transcription of the meeting
  """
  transcription: [TranscriptBlock!]

  """
  The timestamp the meeting was created
  """
  createdAt: DateTime!

  """
  The id of the user that created the meeting
  """
  createdBy: ID!

  """
  The user that created the meeting
  """
  createdByUser: User!

  """
  Disables anonymity of reflections
  """
  disableAnonymity: Boolean!

  """
  The timestamp the meeting officially ended
  """
  endedAt: DateTime

  """
  The location of the facilitator in the meeting
  """
  facilitatorStageId: ID!

  """
  The userId (or anonymousId) of the most recent facilitator
  """
  facilitatorUserId: ID!

  """
  The facilitator team member
  """
  facilitator: TeamMember!

  """
  The team members that were active during the time of the meeting
  """
  meetingMembers: [RetrospectiveMeetingMember!]!

  """
  The auto-incrementing meeting number for the team
  """
  meetingNumber: Int!

  """
  The id of the meeting series this meeting belongs to
  """
  meetingSeriesId: ID

  """
  The meeting series this meeting is associated with if the meeting is recurring
  """
  meetingSeries: MeetingSeries

  meetingType: MeetingTypeEnum!

  """
  The name of the meeting
  """
  name: String!

  """
  The organization this meeting belongs to
  """
  organization: Organization!

  """
  The phases the meeting will go through, including all phase-specific state
  """
  phases: [NewMeetingPhase!]!

  """
  If meeting has a meeting series associated, this is the time the meeting will end
  """
  scheduledEndTime: DateTime

  """
  true if should show the org the conversion modal, else false
  """
  showConversionModal: Boolean!

  """
  The OpenAI generated summary of all the content in the meeting, such as reflections, tasks, and comments. Undefined if the user doesnt have access to the feature or it's unavailable in this meeting type`
  """
  summary: String

  """
  The time the meeting summary was emailed to the team
  """
  summarySentAt: DateTime

  teamId: ID!

  """
  The team that ran the meeting
  """
  team: Team!

  """
  The last time a meeting was updated (stage completed, finished, etc)
  """
  updatedAt: DateTime

  """
  The retrospective meeting member of the viewer
  """
  viewerMeetingMember: RetrospectiveMeetingMember

  """
  the threshold used to achieve the autogroup. Useful for model tuning. Serves as a flag if autogroup was used.
  """
  autoGroupThreshold: Float

  """
  The number of comments generated in the meeting
  """
  commentCount: Int!

  """
  Is this locked for starter plans?
  """
  locked: Boolean!

  """
  the number of votes allowed for each participant to cast on a single group
  """
  maxVotesPerGroup: Int!

  """
  the next smallest distance threshold to guarantee at least 1 more grouping will be achieved
  """
  nextAutoGroupThreshold: Float

  """
  The number of reflections generated in the meeting
  """
  reflectionCount: Int!

  """
  a single reflection group
  """
  reflectionGroup(reflectionGroupId: ID!): RetroReflectionGroup

  """
  The grouped reflections
  """
  reflectionGroups(sortBy: ReflectionGroupSortEnum): [RetroReflectionGroup!]!

  """
  The number of tasks generated in the meeting
  """
  taskCount: Int!

  """
  The tasks created within the meeting
  """
  tasks: [Task!]!

  """
  The ID of the template used for the meeting
  """
  templateId: ID!

  """
  The number of topics generated in the meeting
  """
  topicCount: Int!

  """
  the total number of votes allowed for each participant
  """
  totalVotes: Int!

  """
  The sum total of the votes remaining for the meeting members that are present in the meeting
  """
  votesRemaining: Int!
}
