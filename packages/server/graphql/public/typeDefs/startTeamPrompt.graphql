extend type Mutation {
  """
  Starts a new team prompt meeting
  """
  startTeamPrompt(
    """
    Id of the team starting the meeting
    """
    teamId: ID!
    """
    The recurrence settings of the meeting
    """
    recurrenceSettings: RecurrenceSettingsInput
    """
    The gcal input if creating a gcal event. If not provided, no gcal event will be created
    """
    gcalInput: CreateGcalEventInput
  ): StartTeamPromptPayload!
}

"""
Return value for updateRecurrenceSettings, which could be an error
"""
union StartTeamPromptPayload = StartTeamPromptSuccess | ErrorPayload

type StartTeamPromptSuccess {
  """
  The started meeting
  """
  meeting: TeamPromptMeeting!
  """
  The team that started the meeting
  """
  team: Team!
}

input CreateGcalEventInput {
  """
  The title of the event
  """
  title: String!
  """
  The description of the event
  """
  description: String!
  """
  The start timestamp of the event
  """
  startTimestamp: Int!
  """
  The end timestamp of the event
  """
  endTimestamp: Int!
  """
  The timezone of the event
  """
  timeZone: String!
  """
  The emails that will be invited to the gcal event. If not provided, the no one will be invited
  """
  invitees: [Email!]
}
