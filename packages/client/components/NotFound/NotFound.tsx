import styled from '@emotion/styled'
import React, {useEffect, useRef, useState} from 'react'
import {useTranslation} from 'react-i18next'
import {PALETTE} from '../../styles/paletteV3'
import Confetti from '../Confetti'

const Background = styled('div')({
  display: 'flex',
  background: 'radial-gradient(ellipse at center, #45484d 0%, #000000 100%)',
  height: '100%',
  width: '100%',
  justifyContent: 'center',
  alignItems: 'center'
})

const LOGO_WIDTH = 320
const LOGO_HEIGHT = 320

const Logo = styled('div')({
  left: 0,
  top: 0,
  position: 'absolute'
})

const Label = styled('div')({
  color: '#fff',
  display: 'flex',
  justifyContent: 'center',
  alignItems: 'center',
  height: 0,
  fontWeight: 600,
  fontSize: LOGO_WIDTH / 6,
  transform: `translateY(-${LOGO_HEIGHT / 2}px)`
})
const Centroid = styled('div')({})
const colors = [
  [PALETTE.GRAPE_700, PALETTE.TOMATO_500, PALETTE.AQUA_400],
  [PALETTE.GRAPE_700, PALETTE.AQUA_400, PALETTE.TOMATO_500],
  [PALETTE.AQUA_400, PALETTE.GRAPE_700, PALETTE.TOMATO_500],
  [PALETTE.AQUA_400, PALETTE.TOMATO_500, PALETTE.GRAPE_700],
  [PALETTE.TOMATO_500, PALETTE.AQUA_400, PALETTE.GRAPE_700],
  [PALETTE.TOMATO_500, PALETTE.GRAPE_700, PALETTE.AQUA_400],
  [PALETTE.GRAPE_700, PALETTE.GRAPE_700, PALETTE.GRAPE_700],
  [PALETTE.TOMATO_500, PALETTE.TOMATO_500, PALETTE.TOMATO_500],
  [PALETTE.AQUA_400, PALETTE.AQUA_400, PALETTE.AQUA_400]
]

const maxX = window.innerWidth - LOGO_WIDTH
const maxY = window.innerHeight - LOGO_HEIGHT
let dirX = Math.round(Math.random()) * 2 - 1
let dirY = Math.round(Math.random()) * 2 - 1
let curX = Math.floor(Math.random() * maxX)
let curY = Math.floor(Math.random() * maxY)
let palette = colors[Math.floor(Math.random() * colors.length)]!
const speed = 4

const move = (el: HTMLImageElement, onWin: () => void) => {
  const diffX = dirX * speed
  const diffY = dirY * speed
  const nextX = curX + diffX
  const nextY = curY + diffY
  curX = nextX > maxX ? maxX - (nextX - maxX) : nextX < 0 ? -nextX : nextX
  curY = nextY > maxY ? maxY - (nextY - maxY) : nextY < 0 ? -nextY : nextY
  dirX = curX === nextX ? dirX : dirX * -1
  dirY = curY === nextY ? dirY : dirY * -1
  el.style.transform = `translate3d(${curX}px,${curY}px,0)`
  const isChange = curX !== nextX || curY !== nextY
  if (isChange) {
    let nextPalette = palette
    while (nextPalette === palette) {
      nextPalette = colors[Math.floor(Math.random() * colors.length)]!
    }
    palette = nextPalette
    const wings = Array.from((el as any).firstChild.firstChild.children) as SVGPathElement[]
    wings.forEach((wing, idx) => {
      wing.setAttribute('fill', palette[idx]!)
    })
    if (curX !== nextX && curY !== nextY) {
      onWin()
    }
  }

  requestAnimationFrame(() => {
    move(el, onWin)
  })
}

const NotFound = () => {
  const {t} = useTranslation()

  const ref = useRef<HTMLImageElement>(null)
  const [active, _setActive] = useState(false)
  const setActive = () => {
    _setActive(true)
    requestAnimationFrame(() => {
      _setActive(false)
    })
  }
  useEffect(() => {
    move(ref.current!, setActive)
  }, [])
  return (
    <Background>
      <Logo ref={ref}>
        <svg
          width={LOGO_WIDTH}
          height={LOGO_HEIGHT}
          viewBox={t('NotFound.003128')}
          fill='none'
          xmlns='http://www.w3.org/2000/svg'
        >
          <g id='mark-color'>
            <path
              id={t('NotFound.Union')}
              fillRule='evenodd'
              clipRule='evenodd'
              d={t(
                'NotFoundm131766248418C133995250548136226252658138486254648C13971325574114095325678614219257828L142926258448C1434352588714394259309144446259749C145162260371145879260994146605261568C11985627983894646284908774963275038C592261264468511255237788552661201828C557556197548564563193188572656188788C57429218790357619618701857811318613C579236185604580371185077581458184548C587854181468594958178348602856175208C60686173618611157172028615552170438C624255167278633752164088644055160878C64625216021648389159537650525158863C653064158065655603157265658252156468C659338156145660339155827661328155509C6626115509866389215469665356154278L665955154398C709863164178759363173858813855183288C869153192888931152202088996057211038C100376212095101135213163101895214231C103463216436105032218642106696220758C110066225038113506229128116986233078C117637233815118295234519118951235222C11944523575119937236278120426236818C122805239398125176241948127576244378C128616245418129662246414130709247411L131766248418Z'
              )}
              fill={palette[0]}
            />
            <path
              id='Union_2'
              fillRule='evenodd'
              clipRule='evenodd'
              d={t(
                'NotFoundm25064221014L250918210039C251548209808252194209588252839209367C253702209073254564208779255387208459C257848241059249647265129232498275039C214208285589186787279079157977257719C154537255159151107252349147677249419C147031248869146389248285145745247701C145383247372145021247043144657246719C142228244539139797242299137378239939C136238238839135117237709133988236559C131658234199129358231759127068229249L12611228196C125376227393124645226591123927225769C123717225533123502225304123289225075C123004224771122721224468122448224149C122488224159122528224159122577224159C144108226349166538226179188058223969L190614223707C19379222338419697422306200088222619C205468221839210708220909215857219869C216963219644218042219392219124219139C219772218987220421218835221078218689C224408217949227727217199230938216349C232311215983233655215587234993215192L236677214699C239597213849242488212979245298212029C2471132114324887521078625064221014Z'
              )}
              fill={palette[1]}
            />
            <path
              id='Union_3'
              fillRule='evenodd'
              clipRule='evenodd'
              d={t(
                'NotFoundm25839811282C257528116032565281192725549812251C25527812320725507123899254862124591C25455912559625425712660125391812762C25223913259250408137624838914265C247358145243246185147801245012150363C2445115145724400915255224351815365C239038163712341781736722861818329C223179192732172582018721097821058C210958210612109392106421090821067C211279210604211639210522212210441C21234721036221269421028421304821022C213898210045214736209861215574209678C2163112095162170472093552177882092C221038208492242292077322736820692C22896920652305482060823211820564C235288204752383782037824141820277L24256202403C243503202124444920179824536920147C249618199972537681983925774819667C290948182283099991619130999914079C3099991210129324810187263788877C263657885768263481894678263306903581C263185909706263064915828262958921901C2626099422262258962401261838982901C261259101142605791040225986810691L259565108168C2591931097225882311126125839811282Z'
              )}
              fill={palette[2]}
            />
          </g>
        </svg>
        <Label>{t('NotFound.404')}</Label>
      </Logo>
      <Centroid>
        <Confetti active={active} />
      </Centroid>
    </Background>
  )
}

export default NotFound
